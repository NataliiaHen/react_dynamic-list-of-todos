{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","selectedTodo","onSelect","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","query","filter","setFilter","setQuery","value","onChange","event","target","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeModal","useState","user","setUser","useEffect","userId","href","email","name","App","setTodos","setSelectedTodo","filteredTodos","useMemo","preparedTodos","trim","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"iLAAYA,E,0ECUCC,EAA4B,SAAC,GAAD,IACvCC,EADuC,EACvCA,MACAC,EAFuC,EAEvCA,aACAC,EAHuC,EAGvCA,SAHuC,OAKvC,wBAAOC,UAAU,+BAAjB,UACE,gCACE,+BACE,mCACA,6BACE,sBAAMA,UAAU,OAAhB,SACE,mBAAGA,UAAU,qBAGjB,uCACA,wCAIJ,gCACGH,EAAMI,KAAI,SAAAC,GACT,IAAQC,EAAyBD,EAAzBC,GAAIC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,UAEnB,OACE,qBACE,UAAQ,OACRL,UAAWM,IAAW,CACpB,4BAA6BR,IAAiBI,IAHlD,UAOE,oBAAIF,UAAU,eAAd,SAA8BG,IAC9B,oBAAIH,UAAU,eAAd,SACGK,GACC,sBAAML,UAAU,OAAO,UAAQ,gBAA/B,SACE,mBAAGA,UAAU,qBAInB,oBAAIA,UAAU,2BAAd,SACE,mBACEA,UAAWM,IACT,CAAE,mBAAoBD,GACtB,CAAE,mBAAoBA,IAH1B,SAMGD,MAGL,oBAAIJ,UAAU,8BAAd,SACE,wBACE,UAAQ,eACRA,UAAU,SACVO,KAAK,SACLC,QAAS,kBAAMT,EAASG,IAJ1B,SAME,sBAAMF,UAAU,OAAhB,SACE,mBAAGA,UAAWM,IACZ,MACA,CAAE,SAAUR,IAAiBI,GAC7B,CAAE,eAAgBJ,IAAiBI,cA/BtCC,a,SDvCLR,K,UAAAA,E,sBAAAA,E,gBAAAA,E,eAAAA,M,KEUL,IAAMc,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,UACAC,EACI,EADJA,SAcA,OACE,uBAAMb,UAAU,mBAAhB,UACE,mBAAGA,UAAU,UAAb,SACE,sBAAMA,UAAU,SAAhB,SACE,yBACE,UAAQ,eACRc,MAAOH,EACPI,SAnBV,SAA4BC,GAC1BJ,EAAUI,EAAMC,OAAOH,QAejB,UAKE,wBAAQA,MAAOnB,EAAOuB,IAAtB,iBACA,wBAAQJ,MAAOnB,EAAOwB,OAAtB,oBACA,wBAAQL,MAAOnB,EAAOyB,UAAtB,8BAKN,oBAAGpB,UAAU,qDAAb,UACE,uBACE,UAAQ,cACRO,KAAK,OACLP,UAAU,QACVqB,YAAY,YACZP,MAAOJ,EACPK,SA/BR,SAA2BC,GACzBH,EAASG,EAAMC,OAAOH,UAgClB,sBAAMd,UAAU,eAAhB,SACE,mBAAGA,UAAU,8BAGdU,GACC,sBACEV,UAAU,gBACVsB,MAAO,CAAEC,cAAe,OAF1B,SAKE,wBACE,UAAQ,oBACRhB,KAAK,SACLP,UAAU,SACVQ,QA3CZ,WACEK,EAAS,gBCtBAW,G,MAAmB,kBAC9B,qBAAKxB,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,wBCSnB,SAASyB,EAAOC,GAEd,IARYC,EAQNC,EAZS,iEAYYF,EAAM,QAGjC,OAXYC,EAWA,IAVL,IAAIE,SAAQ,SAAAC,GACjBC,WAAWD,EAASH,OAUnBK,MAAK,kBAAMC,MAAML,MACjBI,MAAK,SAAAE,GAAG,OAAIA,EAAIC,UAGd,ICbMC,EAA6B,SAAC,GAGpC,IAFLtC,EAEI,EAFJA,aACAuC,EACI,EADJA,WAEA,EAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACQrC,EAAcL,EAAdK,GAAIC,EAAUN,EAAVM,MAOZ,OALAqC,qBAAU,WDQW,IAACC,KCPZvC,EDO+BsB,EAAG,iBAAiBiB,KCNxDV,KAAKQ,KACP,IAGD,sBAAKxC,UAAU,kBAAkB,UAAQ,QAAzC,UACE,qBAAKA,UAAU,qBAEbuC,EAGA,sBAAKvC,UAAU,aAAf,UACE,yBAAQA,UAAU,kBAAlB,UACE,qBACEA,UAAU,0CACV,UAAQ,eAFV,SAIGF,GAAY,gBAAaK,KAI5B,wBACEI,KAAK,SACLP,UAAU,SACV,UAAQ,cACRQ,QAAS6B,OAIb,sBAAKrC,UAAU,kBAAf,UACE,mBAAGA,UAAU,QAAQ,UAAQ,cAA7B,SACGI,IAGH,oBAAGJ,UAAU,QAAQ,UAAQ,aAA7B,UACGF,EAAaO,UACV,wBAAQL,UAAU,mBAAlB,kBACA,wBAAQA,UAAU,kBAAlB,qBAEH,OAED,mBACE2C,KAAI,iBAAYJ,EAAKK,OADvB,SAGGL,EAAKM,gBAnCd,cAAC,EAAD,QCfKC,EAAgB,WAC3B,MAA0BR,mBAAiB,IAA3C,mBAAOzC,EAAP,KAAckD,EAAd,KACA,EAAwCT,mBAAsB,MAA9D,mBAAOxC,EAAP,KAAqBkD,EAArB,KACA,EAA4BV,mBAAiB3C,EAAOuB,KAApD,mBAAOP,EAAP,KAAeC,EAAf,KACA,EAA0B0B,mBAAS,IAAnC,mBAAO5B,EAAP,KAAcG,EAAd,KAEA4B,qBAAU,WFKkBhB,EAAY,UEHnCO,KAAKe,KACP,IAEH,IAAME,EAAwBC,mBAAQ,WACpC,IAAIC,EAAa,YAAOtD,GAqBxB,OAnBIc,IAAWhB,EAAOuB,MACpBiC,EAAgBA,EAAcxC,QAAO,SAAAT,GACnC,OAAQS,GACN,KAAKhB,EAAOwB,OACV,OAAQjB,EAAKG,UAEf,KAAKV,EAAOyB,UACV,OAAOlB,EAAKG,UAEd,QACE,OAAO,OAKXK,EAAM0C,SACRD,EAAgBA,EAAcxC,QAAO,SAAAT,GAAI,OAAIA,EAAKE,MAAMiD,cAAcC,SAAS5C,EAAM2C,mBAGhFF,IACN,CAACtD,EAAOc,EAAQD,IAEnB,OACE,qCACE,qBAAKV,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,oBAEA,qBAAKA,UAAU,QAAf,SACE,cAAC,EAAD,CACEU,MAAOA,EACPC,OAAQA,EACRC,UAAWA,EACXC,SAAUA,MAId,qBAAKb,UAAU,QAAf,SACIH,EAAM0D,OAGN,cAAC,EAAD,CACE1D,MAAOoD,EACPnD,aAAcA,EACdC,SAAUiD,IALZ,cAAC,EAAD,aAaTlD,GACC,cAAC,EAAD,CACEA,aAAcA,EACduC,WAAY,kBAAMW,EAAgB,aChF5CQ,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.cc4150ca.chunk.js","sourcesContent":["export enum Filter {\n  ALL = 'all',\n  COMPLETED = 'completed',\n  ACTIVE = 'active',\n  TITLE = 'title',\n}\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onSelect: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelect,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => {\n        const { id, title, completed } = todo;\n\n        return (\n          <tr\n            data-cy=\"todo\"\n            className={classNames({\n              'has-background-info-light': selectedTodo === todo,\n            })}\n            key={id}\n          >\n            <td className=\"is-vcentered\">{id}</td>\n            <td className=\"is-vcentered\">\n              {completed && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={classNames(\n                  { 'has-text-danger': !completed },\n                  { 'has-text-success': completed },\n                )}\n              >\n                {title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => onSelect(todo)}\n              >\n                <span className=\"icon\">\n                  <i className={classNames(\n                    'far',\n                    { 'fa-eye': selectedTodo !== todo },\n                    { 'fa-eye-slash': selectedTodo === todo },\n                  )}\n                  />\n\n                </span>\n              </button>\n            </td>\n          </tr>\n        );\n      })}\n    </tbody>\n  </table>\n);\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  query: string,\n  filter: Filter;\n  setFilter: (type: Filter) => void;\n  setQuery: (type: string) => void;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  filter,\n  setFilter,\n  setQuery,\n}) => {\n  function handleFilterChange(event: React.ChangeEvent<HTMLSelectElement>) {\n    setFilter(event.target.value as Filter);\n  }\n\n  function handleInputChange(event: React.ChangeEvent<HTMLInputElement>) {\n    setQuery(event.target.value);\n  }\n\n  function handleCloseSearch() {\n    setQuery('');\n  }\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={filter}\n            onChange={handleFilterChange}\n          >\n            <option value={Filter.ALL}>All</option>\n            <option value={Filter.ACTIVE}>Active</option>\n            <option value={Filter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleInputChange}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {query && (\n          <span\n            className=\"icon is-right\"\n            style={{ pointerEvents: 'all' }}\n          >\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleCloseSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  selectedTodo: Todo,\n  closeModal: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  selectedTodo,\n  closeModal,\n}) => {\n  const [user, setUser] = useState<User>();\n  const { id, title } = selectedTodo;\n\n  useEffect(() => {\n    getUser(id)\n      .then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {selectedTodo && `Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {selectedTodo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a\n                href={`mailto:${user.email}`}\n              >\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { Filter } from './types/Filter';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [filter, setFilter] = useState<Filter>(Filter.ALL);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    getTodos()\n      .then(setTodos);\n  }, []);\n\n  const filteredTodos: Todo[] = useMemo(() => {\n    let preparedTodos = [...todos];\n\n    if (filter !== Filter.ALL) {\n      preparedTodos = preparedTodos.filter(todo => {\n        switch (filter) {\n          case Filter.ACTIVE:\n            return !todo.completed;\n\n          case Filter.COMPLETED:\n            return todo.completed;\n\n          default:\n            return true;\n        }\n      });\n    }\n\n    if (query.trim()) {\n      preparedTodos = preparedTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    return preparedTodos;\n  }, [todos, filter, query]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                filter={filter}\n                setFilter={setFilter}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!todos.length ? (\n                <Loader />\n              ) : (\n                <TodoList\n                  todos={filteredTodos}\n                  selectedTodo={selectedTodo}\n                  onSelect={setSelectedTodo}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          selectedTodo={selectedTodo}\n          closeModal={() => setSelectedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}